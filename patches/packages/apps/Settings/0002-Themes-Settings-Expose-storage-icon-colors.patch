From 80f700aa6c3d67a73b348457dfe509c73b5a0daf Mon Sep 17 00:00:00 2001
From: SpiritCroc <spiritcroc@gmail.com>
Date: Thu, 8 Dec 2016 20:40:16 +0100
Subject: [PATCH 2/9] Themes: Settings: Expose storage icon colors

forward ported to oreo

Change-Id: I97ce427f0683791670f1bbf82eaef66152fe4961
Signed-off-by: Harsh Shandilya <harsh@prjkt.io>
---
 res/values/projekt_colors.xml                 | 25 +++++++++++++++++
 .../settings/deviceinfo/StorageSettings.java  | 28 +++++++++++--------
 2 files changed, 42 insertions(+), 11 deletions(-)
 create mode 100644 res/values/projekt_colors.xml

diff --git a/res/values/projekt_colors.xml b/res/values/projekt_colors.xml
new file mode 100644
index 0000000000..47c84a2665
--- /dev/null
+++ b/res/values/projekt_colors.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (c) 2016-2017 Projekt Substratum
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<resources>
+    <!-- Storage icons -->
+    <color name="storage_public">#ff9e9e9e</color>
+    <color name="storage_private_1">#ff26a69a</color>
+    <color name="storage_private_2">#ffab47bc</color>
+    <color name="storage_private_3">#fff2a600</color>
+    <color name="storage_private_4">#ffec407a</color>
+    <color name="storage_private_5">#ffc0ca33</color>
+</resources>
diff --git a/src/com/android/settings/deviceinfo/StorageSettings.java b/src/com/android/settings/deviceinfo/StorageSettings.java
index 01903c0e9d..f77a4a8add 100644
--- a/src/com/android/settings/deviceinfo/StorageSettings.java
+++ b/src/com/android/settings/deviceinfo/StorageSettings.java
@@ -23,6 +23,7 @@ import android.app.Fragment;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
+import android.content.res.Resources ;
 import android.graphics.Color;
 import android.graphics.drawable.Drawable;
 import android.os.AsyncTask;
@@ -75,15 +76,19 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
     private static final String TAG_VOLUME_UNMOUNTED = "volume_unmounted";
     private static final String TAG_DISK_INIT = "disk_init";
 
-    static final int COLOR_PUBLIC = Color.parseColor("#ff9e9e9e");
+    static int getColorPublic(Resources resources) {
+        return resources.getColor(R.color.storage_public);
+    }
 
-    static final int[] COLOR_PRIVATE = new int[] {
-            Color.parseColor("#ff26a69a"),
-            Color.parseColor("#ffab47bc"),
-            Color.parseColor("#fff2a600"),
-            Color.parseColor("#ffec407a"),
-            Color.parseColor("#ffc0ca33"),
-    };
+    static int[] getColorPrivate(Resources resources) {
+        return new int[] {
+                resources.getColor(R.color.storage_private_1),
+                resources.getColor(R.color.storage_private_2),
+                resources.getColor(R.color.storage_private_3),
+                resources.getColor(R.color.storage_private_4),
+                resources.getColor(R.color.storage_private_5),
+        };
+    }
 
     private StorageManager mStorageManager;
 
@@ -166,11 +171,12 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
         final List<VolumeInfo> volumes = mStorageManager.getVolumes();
         Collections.sort(volumes, VolumeInfo.getDescriptionComparator());
 
+        int[] colorPrivate = getColorPrivate(getResources());
         for (VolumeInfo vol : volumes) {
             if (vol.getType() == VolumeInfo.TYPE_PRIVATE) {
                 final long volumeTotalBytes = PrivateStorageInfo.getTotalSize(vol,
                         sTotalInternalStorage);
-                final int color = COLOR_PRIVATE[privateCount++ % COLOR_PRIVATE.length];
+                final int color = colorPrivate[privateCount++ % colorPrivate.length];
                 mInternalCategory.addPreference(
                         new StorageVolumePreference(context, vol, color, volumeTotalBytes));
                 if (vol.isMountedReadable()) {
@@ -180,7 +186,7 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
                 }
             } else if (vol.getType() == VolumeInfo.TYPE_PUBLIC) {
                 mExternalCategory.addPreference(
-                        new StorageVolumePreference(context, vol, COLOR_PUBLIC, 0));
+                        new StorageVolumePreference(context, vol, getColorPublic(getResources()), 0));
             }
         }
 
@@ -192,7 +198,7 @@ public class StorageSettings extends SettingsPreferenceFragment implements Index
                 // TODO: add actual storage type to record
                 final Drawable icon = context.getDrawable(R.drawable.ic_sim_sd);
                 icon.mutate();
-                icon.setTint(COLOR_PUBLIC);
+                icon.setTint(getColorPublic(getResources()));
 
                 final Preference pref = new Preference(context);
                 pref.setKey(rec.getFsUuid());
-- 
2.18.0

